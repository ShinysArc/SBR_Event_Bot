const { ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const participantSchema = require('../../models/participant-schema');
const roleSchema = require('../../models/role-schema');

module.exports = {
    name: 'gamestart',
    description: 'gamestart',
    init: (client) => {
        client.on('interactionCreate', async (interaction) => {
            if (!interaction.isButton())
                return;

            const member = interaction.member;
            let role = member.guild.roles.cache.find((f) => f.name === 'Participant');
            if (!role) {
                role = await member.guild.roles.create({
                    name: 'Participant',
                    reason: 'Le r√¥le Participant est n√©cessaire pour le bon fonctionnement du bot.',
                });
                await roleSchema.create({
                    id: role.id,
                    name: role.name,
                    channelId: interaction.channel.id,
                    messageId: interaction.message.id,
                });
            }

            if (member.roles.cache.some(r => r.name === "Participant")) {
                member.roles.remove(role);
                const p = await participantSchema.findOneAndDelete({
                    id: member.id
                });
                interaction.reply({ content: "Tu n'as plus le r√¥le Participant !", ephemeral: true });
            } else {
                member.roles.add(role);
                const p = await participantSchema.create({
                    id: member.id,
                    points: 0
                });
                interaction.reply({ content: 'R√¥le Participant ajout√© !', ephemeral: true });
            }
        });
    },
    callback: async (message) => {
        if (!message.member.roles.cache.some(r => r.name === "Staff" || r.name === "Joestar (Administrateur)")) {
            message.message.reply('bonsoir non');
            return;
        }
        
        const msg = `
__**Bonjour √† tous et √† toutes !**__
Ici St√©phane Acier, je reprends la parole quasiment __1 an apr√®s la derni√®re Steel Ball Run__ organis√© ici sur le serveur JojoLovers !
*"Pourquoi ?"* me diriez-vous... Je vous annonce officiellement la ***2√®me √©dition de la Steel Ball Run du JojoLovers !*** Encore une course qui s'inscrira dans la l√©gende, puisqu'elle se d√©roulera tout le long du mois de d√©cembre.

__Prenez en compte une modification importante depuis la derni√®re SBR :__
- Cette fois-ci, chacun-e pour soi ! Vous devrez √™tre r√©actif-ve car vous, et vous seul-e √™tes responsable pour monter en haut du classement.

__Concernant les r√®gles, je vais vous rafraichir la m√©moire :__
‚Ä¢ Le classement se fera gr√¢ce √† un syst√®me de points, vous aurez l'occasion d'en gagner **deux fois par jour, et chaque samedi soir** (sauf si exception), un √©v√®nement en vocal se fera pour gagner des points !
‚Ä¢ Chaque jour, 2 questions seront pos√©es **__√† n'importe quel moment de la journ√©e (entre 08:00 et 00:00)__**. Premier-√®re r√©pondu-e, premier-√®re r√©compens√©-e : il faudra √™tre vif-ve pour gagner le plus de point. Les trois premiers √† r√©pondre correctement √† la question gagneront des points (*le 1er 3 pts, le 2√®me 2 pts et le 3√®me 1 pt*). Ce tableau sera montr√© au gr√© des organisateurs qui m'√©paulent, il pourra √™tre montr√© √† tout moment.
‚Ä¢ Votre score d√©terminera votre classement dans le tableau. Des r√©compenses sont √† la cl√© pour les gagnant-e-s (tomes jojo, posters, nitro...).

Sous cette annonce appara√Ætra un bouton, **veuillez r√©agir pour indiquer votre participation**. Vous avez trois jours, jusqu'au <t:1669827600:F>, pour vous inscrire.

Alors, cher-e-s membres de JoJoLovers, √™tes-vous pr√™t-e-s pour la Steel Ball Run ?
Que les meilleur-e-s gagnent.

||@everyone||`;
        const reactionMessage = await message.channel.send(msg);
        const button = new ActionRowBuilder()
			.addComponents(
				new ButtonBuilder()
					.setCustomId('primary')
					.setLabel('Participer !')
                    .setEmoji('üèá')
					.setStyle(ButtonStyle.Primary),
			);

        reactionMessage.edit({ components: [button] });
        message.message.delete();
    },
}